{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avaja\\\\Desktop\\\\CPE307\\\\frontend\\\\src\\\\MyApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyApp() {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n\n  async function removeOneCharacter(index) {\n    const updated = characters.filter((character, i) => {\n      return i !== index;\n    });\n    setCharacters(updated);\n\n    try {\n      const response = await axios.delete('http://localhost:5000/users/' + characters[index].id); // setCharacters(updated);\n\n      return response.data.users_list;\n    } catch (error) {\n      //We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  } // function updateList(person) {\n  //   setCharacters([...characters, person]);\n  // }\n\n\n  async function makePostCall(person) {\n    try {\n      const response = await axios.post('http://localhost:5000/users', person);\n      console;\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  function updateList(person) {\n    makePostCall(person).then(result => {\n      if (result) setCharacters([...characters, person]);\n    });\n  }\n\n  useEffect(() => {\n    fetchAll().then(result => {\n      if (result) setCharacters(result);\n    });\n  }, []);\n\n  async function fetchAll() {\n    try {\n      const response = await axios.get('http://localhost:5000/users');\n      return response.data.users_list;\n    } catch (error) {\n      //We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    fetchAll().then(result => {\n      if (result) setCharacters(result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      characterData: characters,\n      removeCharacter: removeOneCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: updateList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"dQ9NQ4J+zw+4FaFRRqJwdLdWvOA=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/avaja/Desktop/CPE307/frontend/src/MyApp.js"],"names":["React","useState","useEffect","Table","Form","axios","MyApp","characters","setCharacters","removeOneCharacter","index","updated","filter","character","i","response","delete","id","data","users_list","error","console","log","makePostCall","person","post","updateList","then","result","fetchAll","get"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,iBAAeQ,kBAAf,CAAmCC,KAAnC,EAA0C;AACxC,UAAMC,OAAO,GAAGJ,UAAU,CAACK,MAAX,CAAkB,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAClD,aAAOA,CAAC,KAAKJ,KAAb;AACD,KAFe,CAAhB;AAGAF,IAAAA,aAAa,CAACG,OAAD,CAAb;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMV,KAAK,CAACW,MAAN,CAAa,iCAA+BT,UAAU,CAACG,KAAD,CAAV,CAAkBO,EAA9D,CAAvB,CADE,CAEF;;AACA,aAAOF,QAAQ,CAACG,IAAT,CAAcC,UAArB;AACC,KAJH,CAKA,OAAOC,KAAP,EAAa;AACX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACD;AACF,GAlBc,CAoBf;AACA;AACA;;;AAGD,iBAAeG,YAAf,CAA4BC,MAA5B,EAAmC;AAClC,QAAI;AACD,YAAMT,QAAQ,GAAG,MAAMV,KAAK,CAACoB,IAAN,CAAW,6BAAX,EAA0CD,MAA1C,CAAvB;AACAH,MAAAA,OAAO;AACP,aAAON,QAAQ,CAACG,IAAhB;AACF,KAJD,CAKA,OAAOE,KAAP,EAAc;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACF;AACF;;AAED,WAASM,UAAT,CAAoBF,MAApB,EAA4B;AAC1BD,IAAAA,YAAY,CAACC,MAAD,CAAZ,CAAqBG,IAArB,CAA2BC,MAAM,IAAI;AACrC,UAAIA,MAAJ,EACGpB,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBiB,MAAhB,CAAD,CAAb;AACF,KAHD;AAID;;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACf2B,IAAAA,QAAQ,GAAGF,IAAX,CAAiBC,MAAM,IAAI;AACxB,UAAIA,MAAJ,EACGpB,aAAa,CAACoB,MAAD,CAAb;AACJ,KAHF;AAID,GALS,EAKP,EALO,CAAT;;AAOC,iBAAeC,QAAf,GAAyB;AACvB,QAAI;AACD,YAAMd,QAAQ,GAAG,MAAMV,KAAK,CAACyB,GAAN,CAAU,6BAAV,CAAvB;AACA,aAAOf,QAAQ,CAACG,IAAT,CAAcC,UAArB;AACF,KAHD,CAIA,OAAOC,KAAP,EAAa;AACV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACF;AACH;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACf2B,IAAAA,QAAQ,GAAGF,IAAX,CAAiBC,MAAM,IAAI;AACxB,UAAIA,MAAJ,EACGpB,aAAa,CAACoB,MAAD,CAAb;AACJ,KAHF;AAID,GALS,EAKP,EALO,CAAT;AAOC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,aAAa,EAAErB,UAAtB;AAAkC,MAAA,eAAe,EAAEE;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEiB;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA5EQpB,K;;KAAAA,K;AA+ET,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction MyApp() {\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  async function removeOneCharacter (index) {\r\n    const updated = characters.filter((character, i) => {\r\n      return i !== index\r\n    });\r\n    setCharacters(updated);\r\n    try {\r\n      const response = await axios.delete('http://localhost:5000/users/'+characters[index].id);\r\n      // setCharacters(updated);\r\n      return response.data.users_list;     \r\n      }\r\n    catch (error){\r\n      //We're not handling errors. Just logging into the console.\r\n      console.log(error); \r\n      return false;         \r\n    }\r\n  }\r\n\r\n  // function updateList(person) {\r\n  //   setCharacters([...characters, person]);\r\n  // }\r\n\r\n\r\n async function makePostCall(person){\r\n  try {\r\n     const response = await axios.post('http://localhost:5000/users', person);\r\n     console\r\n     return response.data;\r\n  }\r\n  catch (error) {\r\n     console.log(error);\r\n     return false;\r\n  }\r\n}\r\n\r\nfunction updateList(person) { \r\n  makePostCall(person).then( result => {\r\n  if (result)\r\n     setCharacters([...characters, person] );\r\n  });\r\n}\r\n\r\n useEffect(() => {\r\n  fetchAll().then( result => {\r\n     if (result)\r\n        setCharacters(result);\r\n   });\r\n}, [] );\r\n\r\n  async function fetchAll(){\r\n    try {\r\n       const response = await axios.get('http://localhost:5000/users');\r\n       return response.data.users_list;     \r\n    }\r\n    catch (error){\r\n       //We're not handling errors. Just logging into the console.\r\n       console.log(error); \r\n       return false;         \r\n    }\r\n }\r\n\r\n useEffect(() => {\r\n  fetchAll().then( result => {\r\n     if (result)\r\n        setCharacters(result);\r\n   });\r\n}, [] );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Table characterData={characters} removeCharacter={removeOneCharacter} />\r\n      <Form handleSubmit={updateList} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}